name: Pull Request Checks
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, review_requested, ready_for_review]

env:
  CARGO_INCREMENTAL: 0 # disable incremental compilation
  RUSTFLAGS: "-D warnings -D unused_extern_crates"
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CARGO_PROFILE_DEV_DEBUG: 0

jobs:
  # fail_if_pull_request_is_draft:
  #   if: github.event.pull_request.draft == true
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Fail on draft PR
  #       run: exit 1

  check-author:
    runs-on: ubuntu-latest
    outputs:
      is_maintainer: ${{ steps.check.outputs.is_maintainer }}
    steps:
      - uses: actions/checkout@v4
      - id: check
        run: |
          MAINTAINERS=("grantkee" "sstanfield" "robriks")
          if [[ " ${MAINTAINERS[@]} " =~ " ${{ github.event.pull_request.user.login }} " ]]; then
            echo "is_maintainer=true" >> $GITHUB_OUTPUT
          else
            echo "is_maintainer=false" >> $GITHUB_OUTPUT
          fi

  contributor-verify:
    needs: check-author
    if: needs.check-author.outputs.is_maintainer == 'false' && github.event.pull_request.draft == false
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Install nightly toolchain
        run: |
          rustup update --no-self-update nightly
          rustup default nightly
          rustup component add --toolchain nightly rustfmt rust-src clippy
      - name: Cache deps
        uses: Swatinem/rust-cache@9bdad043e88c75890e36ad3bbc8d27f0090dd609
        with:
          key: ${{ env.RUST_CHANNEL }}
      - name: Compile tests
        run: cargo test --no-run --locked
      - name: Compile workspace
        if: matrix.os == 'ubuntu-latest'
        run: cargo build --quiet
      - name: Check formatting
        run: |
          rustc --version
          cargo +nightly version
          cargo +nightly fmt --verbose -- --check
      - name: Run clippy
        run: |
          rustc --version
          cargo +nightly version
          cargo +nightly clippy --version
          cargo +nightly clippy --verbose --all --all-features -- -D warnings
      - name: Run tests
        if: matrix.os == 'ubuntu-latest' || github.event_name == 'push'
        run: cargo test --workspace --exclude tn-faucet -- --quiet
