[workspace]

members = [
    "bin/telcoin-network",

    # common
    "crates/common/macros",
    "crates/common/telemetry-subscribers",
    "crates/common/tracing",
    "crates/common/types",
    "crates/common/tn-network-types",

    # execution
    "crates/execution/blockchain-tree",
    "crates/execution/config",
    "crates/execution/consensus/common",
    "crates/execution/consensus/lattice",
    "crates/execution/interfaces",
    "crates/execution/metrics",
    "crates/execution/metrics/metrics-derive",
    "crates/execution/net/common",
    "crates/execution/net/ecies",
    "crates/execution/net/eth-wire",
    "crates/execution/net/discv4",
    "crates/execution/net/dns",
    "crates/execution/net/nat",
    "crates/execution/net/network-api",
    "crates/execution/net/network",
    "crates/execution/net/downloaders",
    "crates/execution/payload/basic",
    "crates/execution/payload/lattice",
    "crates/execution/payload/builder",
    "crates/execution/revm",
    "crates/execution/revm/revm-inspectors",
    "crates/execution/revm/revm-primitives",
    "crates/execution/rlp",
    "crates/execution/rlp/rlp-derive",
    "crates/execution/rpc/ipc",
    "crates/execution/rpc/rpc",
    "crates/execution/rpc/rpc-api",
    "crates/execution/rpc/rpc-builder",
    "crates/execution/rpc/rpc-engine-api",
    "crates/execution/rpc/rpc-types",
    "crates/execution/rpc/rpc-testing-util",
    "crates/execution/stages",
    "crates/execution/storage/codecs",
    "crates/execution/storage/db",
    "crates/execution/storage/libmdbx-rs",
    "crates/execution/storage/libmdbx-rs/mdbx-sys",
    "crates/execution/storage/provider",
    "crates/execution/tasks",
    "crates/execution/transaction-pool",
    "crates/execution/trie",

    # consensus
    "crates/consensus/node",
    "crates/consensus/anemo/*",
    "crates/consensus/consensus",
    "crates/consensus/consensus-metrics",
    "crates/consensus/consensus-util-mem",
    "crates/consensus/consensus-util-mem-derive",
    "crates/consensus/executor",
    "crates/consensus/lattice-common",
    "crates/consensus/network",
    "crates/consensus/node",
    "crates/consensus/primary",
    "crates/consensus/storage",
    "crates/consensus/test-utils",
    "crates/consensus/typed-store",
    "crates/consensus/typed-store-derive",
    "crates/consensus/worker",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
rust-version = "1.70" # Remember to update .clippy.toml and README.md
license = "MIT OR Apache-2.0"
homepage = "https://telco.in"
repository = "https://github.com/telcoin/telcoin-network"

# Explicitly set the resolver to version 2, which is the default for packages with edition >= 2021
# https://doc.rust-lang.org/edition-guide/rust-2021/default-cargo-resolver.html
resolver = "2"


# Dependencies that should be kept in sync through the whole workspace

[workspace.dependencies]

#
# external crates
#

## eth
ethers-core = { version = "2.0.7", default-features = false }
ethers-providers = { version = "2.0.7", default-features = false }
ethers-signers = { version = "2.0.7", default-features = false }
ethers-middleware = { version = "2.0.7", default-features = false }

## misc
bytes = "1.4"
thiserror = "1.0.37"
serde_json = "1.0.94"
serde = { version = "1.0", default-features = false }
serde_with = "3.0"
rand = "0.8.5"
tracing = "0.1.0"
tracing-subscriber = "0.3.17"
anyhow = "1.0.72"
axum = { version = "0.6.6", default-features = false, features = ["headers", "tokio", "http1", "http2", "json", "matched-path", "original-uri", "form", "query"] }
prometheus = "0.13.3"

### tokio
tokio-stream = "0.1.11"
tokio = { version = "1.28.2", default-features = false }
tokio-util = { version = "0.7.4", features = ["codec"] }

### async
async-trait = "0.1.68"
futures = "0.3.26"
pin-project = "1.0.12"
futures-util = "0.3.25"

### crypto
secp256k1 = { version = "0.27.0", default-features = false, features = ["global-context", "rand-std", "recovery"] }

### proc-macros
proc-macro2 = "1.0"
quote = "1.0"

# common
tn-tracing = { path = "crates/common/tracing" }
tn-macros = { path = "crates/common/macros" }
#tn-keys = { path = "crates/common/keys" }
telemetry-subscribers = { path = "crates/common/telemetry-subscribers" }
tn-types = { path = "crates/common/types" }
tn-network-types = { path = "crates/common/tn-network-types" }

# execution
revm = { version = "3" }
revm-primitives = "1.1"
execution-interfaces = { path = "./crates/execution/interfaces" }
execution-provider = { path = "./crates/execution/storage/provider" }
execution-db = { path = "./crates/execution/storage/db" }
execution-config = { path = "./crates/execution/config" }
execution-rlp = { path = "./crates/execution/rlp" }
execution-network = { path = "./crates/execution/net/network" }
execution-net-nat = { path = "./crates/execution/net/nat" }
execution-network-api = { path = "./crates/execution/net/network-api" }
execution-downloaders = { path = "./crates/execution/net/downloaders" }
execution-lattice-consensus = { path = "./crates/execution/consensus/lattice" }
execution-blockchain-tree = { path = "./crates/execution/blockchain-tree" }
execution-codecs = { path = "./crates/execution/storage/codecs" }
execution-discv4 = { path = "./crates/execution/net/discv4" }
execution-basic-payload-builder = { path = "./crates/execution/payload/basic" }
execution-rlp-derive = { path = "./crates/execution/rlp/rlp-derive" }
execution-rpc-types = { path = "./crates/execution/rpc/rpc-types" }
execution-metrics = { path = "./crates/execution/metrics" }
execution-payload-builder = { path = "./crates/execution/payload/builder" }
execution-transaction-pool = { path = "./crates/execution/transaction-pool" }
execution-tasks = { path = "./crates/execution/tasks" }
execution-rpc = { path = "./crates/execution/rpc/rpc" }
execution-rpc-builder = { path = "./crates/execution/rpc/rpc-builder" }
execution-rpc-engine-api = { path = "./crates/execution/rpc/rpc-engine-api" }
execution-stages = { path = "./crates/execution/stages" }
execution-revm = { path = "./crates/execution/revm" }
execution-revm-inspectors = { path = "./crates/execution/revm/revm-inspectors" }
execution-revm-primitives = { path = "./crates/execution/revm/revm-primitives" }
lattice-payload-builder = { path = "./crates/execution/payload/lattice" }

# consensus

fastcrypto = { git = "https://github.com/MystenLabs/fastcrypto", rev = "c961a01596a87e76f590c7e43aca9d57106dbbb1" }
fastcrypto-zkp = { git = "https://github.com/MystenLabs/fastcrypto", rev = "c961a01596a87e76f590c7e43aca9d57106dbbb1", package = "fastcrypto-zkp" }

anemo = { path = "crates/consensus/anemo/anemo" }
anemo-build = { path = "crates/consensus/anemo/anemo-build" }
anemo-tower = { path = "crates/consensus/anemo/anemo-tower" }
#anemo-cli = { path = "crates/consensus/anemo/anemo-cli" }

consensus-metrics = { path = "crates/consensus/consensus-metrics" }
consensus-util-mem = { path = "crates/consensus/consensus-util-mem" }

lattice-common = { path = "crates/consensus/lattice-common" }
#
lattice-worker = { path = "crates/consensus/worker" }
lattice-primary = { path = "crates/consensus/primary" }
lattice-storage = { path = "crates/consensus/storage" }
lattice-network = { path = "crates/consensus/network" }
lattice-node = { path = "crates/consensus/node" }
lattice-executor = { path = "crates/consensus/executor" }
lattice-consensus = { path = "crates/consensus/consensus" }
lattice-typed-store = { path = "crates/consensus/typed-store" }
lattice-typed-store-derive = { path = "crates/consensus/typed-store-derive" }
lattice-test-utils = { path = "crates/consensus/test-utils" }


# transative patch used by reth
[patch.crates-io]
# patched for quantity U256 responses <https://github.com/recmo/uint/issues/224>
revm = { git = "https://github.com/bluealloy/revm/", branch = "release/v25" }
revm-primitives = { git = "https://github.com/bluealloy/revm/", branch = "release/v25" }
