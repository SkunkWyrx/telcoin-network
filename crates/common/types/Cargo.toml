[package]
name = "tn-types"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
authors = ["Grant Kee <grant.kee@telco.in>", "reth Core Contributors", "Mysten Labs <build@mystenlabs.com>"]
description = "Commonly used types in telcoin network."

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# execution
execution-rlp = { workspace = true, features = ["std", "derive", "ethereum-types"] }
execution-rlp-derive.workspace = true
execution-codecs.workspace = true
revm-primitives = { workspace = true, features = ["serde"] }

## ethereum
ethers-core = { workspace = true, default-features = false }
tiny-keccak = { version = "2.0", features = ["keccak"] }
crunchy = { version = "0.2.2", default-features = false, features = ["limit_256"] }
ruint = { version = "1.7.0", features = ["primitive-types", "rlp"] }

# Bloom
fixed-hash = { version = "0.8", default-features = false, features = ["rustc-hex"] }

# crypto
secp256k1 = { workspace = true, default-features = false, features = [
    "global-context",
    "alloc",
    "recovery",
] }

# used for forkid
crc = "3"

# tracing
tracing = { workspace = true }

# tokio
tokio-stream = { workspace = true }

# misc
bytes.workspace = true
serde_json.workspace = true
serde_with.workspace = true
thiserror = { workspace = true }
sucds = "0.5.0"
hex = "0.4"
hex-literal = "0.3"
modular-bitfield = "0.11.2"
derive_more = "0.99"
url = "2.3"
impl-serde = "0.4.0"
once_cell = "1.17.0"
zstd = { version = "0.12", features = ["experimental"] }

# proof related
triehash = "0.8"
# See to replace hashers to simplify libraries
plain_hasher = "0.2"
hash-db = "0.15"

# arbitrary utils
arbitrary = { version = "1.1.7", features = ["derive"], optional = true }
proptest = { version = "1.0", optional = true }
proptest-derive = { version = "0.3", optional = true }
strum = { version = "0.25", features = ["derive"] }



# consensus
async-trait.workspace = true
base64 = "0.21.2"
bcs = "0.1.4"
derive_builder = "0.12.0"
enum_dispatch = "^0.3"
futures = "0.3.24"
indexmap = { version = "1.9.2", features = ["serde"] }
mockall = "0.11.2"
prometheus = "0.13.3"
prost = "0.11.3"
rand = "0.8.5"
roaring = "0.10.1"
serde = { workspace = true, features = ["derive"] }
tokio = { workspace = true, features = ["sync", "rt", "macros"] }
tonic = { version = "0.8.2", features = ["tls"] }
serde_repr = "0.1"
eyre = "0.6.8"
match_opt = "0.1.2"

# dag
rayon = "1.5.3"
itertools = "0.10.5"
arc-swap = "1.5.1"
dashmap = "5.4.0"
either = "1.8.0"
anyhow.workspace = true

fastcrypto.workspace = true
anemo.workspace = true
# 
#

lattice-typed-store.workspace = true
consensus-metrics.workspace = true
lattice-common.workspace = true
consensus-network.workspace = true
consensus-util-mem.workspace = true





[dev-dependencies]
# execution
serde_json.workspace = true
hex-literal = "0.3"
test-fuzz = "4"
rand = { workspace = true }
revm-primitives = { workspace = true, features = ["arbitrary"] }
arbitrary = { version = "1.1.7", features = ["derive"] }
proptest = { version = "1.0" }
proptest-derive = "0.3"
assert_matches = "1.5.0"
toml = "0.7.4"

# necessary so we don't hit a "undeclared 'std'": 
# https://github.com/paradigmxyz/reth/pull/177#discussion_r1021172198 
secp256k1 = { workspace = true }
pprof = { version = "0.11", features = ["flamegraph", "frame-pointer", "criterion"] }


# consensus
criterion = "0.4.0"
serde_test = "1.0.147"
lattice-test-utils.workspace = true
insta = { version = "1.21.1", features = ["json"] }
tempfile = "3.3.0"





[target.'cfg(not(target_env = "msvc"))'.build-dependencies]
protobuf-src = "1.1.0"

[build-dependencies]
prost-build = "0.11.1"
rustversion = "1.0.9"
tonic-build = { version = "0.8.2", features = [ "prost", "transport" ] }
anemo-build.workspace = true



[features]
default = []
arbitrary = ["revm-primitives/arbitrary", "dep:arbitrary", "dep:proptest", "dep:proptest-derive"]
test-utils = []
test = []

# 2 execution benches
[[bench]]
name = "recover_ecdsa_crit"
harness = false

[[bench]]
name = "trie_root"
harness = false


# 2 consensus benches
[[bench]]
name = "batch_digest"
harness = false

[[bench]]
name = "verify_certificate"
harness = false
